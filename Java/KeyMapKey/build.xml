<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="KeyMapKey" xmlns:jacoco="antlib:org.jacoco.ant">

	<property environment="env" />
	<property name="junit.output.dir" value="junit" />
	<property name="coverage.output.dir" value="coverage" />
	<property name="coverage.report.dir" value="coverageReport" />
	<property name="result.exec.file" value="jacoco.exec" />
	<property name="lib.dir" value="../libs" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.6" />
	<property name="source" value="1.6" />

	<path id="jacoco.lib">
		<pathelement location="${lib.dir}/jacocoant.jar" />
	</path>

	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath refid="jacoco.lib" />
	</taskdef>

	<path id="junit.libs">
		<pathelement location="${lib.dir}/hamcrest-core-1.3.jar" />
		<pathelement location="${lib.dir}/junit-4.11.jar" />
	</path>
	
	<path id="libs.classpath">
		<path refid="jacoco.lib" />
		<path refid="junit.libs" />
	</path>

	<path id="KeyMapKey.classpath">
		<pathelement location="bin" />
		<path refid="libs.classpath" />
	</path>

	<target name="init">
		<mkdir dir="bin" />
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="test">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="bin" />
		<delete dir="${coverage.output.dir}" />
		<delete dir="${coverage.report.dir}" />
		<delete dir="${junit.output.dir}" />
	</target>
	<target depends="init" name="build">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
			<src path="src" />
			<src path="test" />
			<classpath refid="KeyMapKey.classpath" />
		</javac>
	</target>
	<target name="test" depends="build">
		<mkdir dir="${junit.output.dir}" />
		<mkdir dir="${coverage.output.dir}" />
		<jacoco:coverage destfile="${coverage.output.dir}/${result.exec.file}">
			<junit fork="yes" printsummary="withOutAndErr">
				<formatter type="xml" />
				<test name="org.summa.experiments.KeyMapKeyTest" todir="${junit.output.dir}" />
				<classpath refid="KeyMapKey.classpath" />
			</junit>
		</jacoco:coverage>
	</target>
	<target name="junitreport" depends="test">
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.output.dir}" />
		</junitreport>
	</target>
	<target name="coveragereport" depends="test">
		<mkdir dir="${coverage.report.dir}" />
		<jacoco:report>
			<!-- This task needs the collected execution data and ... -->
			<executiondata>
				<file file="${coverage.output.dir}/${result.exec.file}" />
			</executiondata>

			<!-- the class files and optional source files ... -->
			<structure name="JaCoCo Ant Example">
				<classfiles>
					<fileset dir="bin">
						<exclude name="**/*Test*.class" />
					</fileset>
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="src" />
				</sourcefiles>
			</structure>

			<!-- to produce reports in different formats. -->
			<html destdir="${coverage.report.dir}" />
			<csv destfile="${coverage.report.dir}/report.csv" />
			<xml destfile="${coverage.report.dir}/report.xml" />
		</jacoco:report>
	</target>
</project>
